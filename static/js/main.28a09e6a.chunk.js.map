{"version":3,"sources":["context/ipfs/IPFSContext.js","context/web3/Web3Context.js","components/shared/button/Button.jsx","components/shared/spinner/Spinner.jsx","utils/web3/mintNFT.js","utils/web3/checkRights.js","utils/web3/getMaxSupply.js","utils/web3/getNextTokenId.js","utils/parseUtils/getNextTokenRep.js","components/pages/home/Home.jsx","utils/web3/approveMigrator.js","components/pages/approve/Approve.jsx","components/shared/header/Header.jsx","components/shared/footer/Footer.jsx","components/App.js","index.js","components/shared/footer/footer.module.css","components/pages/home/home.module.css","components/shared/button/button.module.css","components/pages/approve/approve.module.css","components/shared/header/header.module.css","components/shared/spinner/spinner.module.css"],"names":["IPFSContext","createContext","IPFSContextProvider","props","useState","IPFSuploading","setIPFSuploading","IPFSerror","setIPFSerror","data","file","client","NFTStorage","token","process","store","name","description","image","File","type","metadata","console","log","url","error","Provider","value","IPFSupload","children","Web3Context","Web3ContextProvider","address","setAddress","loading","setLoading","setError","eventsRegistered","setEventsRegistered","window","ethereum","Error","request","method","accounts","chainId","parseInt","registerEvents","Web3","utils","toChecksumAddress","on","length","newChainId","location","reload","connectAccount","useWeb3Context","useContext","Button","link","className","disabled","style","buttonDisabled","button","onClick","to","Spinner","rotate","color","mintNFT","tokenUri","nftContractAddress","accountAddress","web3","NFTContract","eth","Contract","abi","methods","mint","estimateGas","from","send","checkRights","hasRole","call","result","getMaxSupply","max_supply","getNextTokenId","_tokenIdTracker","tokenId","maxSupply","nextTokenId","headbtns_wrapper_btn","maxWidth","margin","Home","NFTAddy","NFTAddress","setNFTAddress","NFTAddressOptions","inputFileRef","useRef","btnBusy","setBtnBusy","nextTokenRep","setNextTokenRep","setName","setDescription","selectedFile","setSelectedFile","toast","metadataUrl","success","message","useEffect","info","getNextTokenRep","then","_tokenRep","wrapper","avatarImg","src","find","addy","avatar","alt","headbtns_wrapper","dropdown","controlClassName","dropdown_control","menuClassName","dropdown_menu","options","onChange","placeholder","e","target","uploadbox_wrapper","backgroundColor","current","click","ref","display","files","text","approveMigrator","migratorAddress","setApprovalForAll","wrapper_btn","Approve","migrator","setMigrator","isAddress","heading","highlight","Header","_address","toastId","header","header__heading","slice","connectButton","Footer","footer","avatars","avatarCard","open","avatarCaption","label","App","exact","path","visibility","overflowWrap","position","rootElement","document","getElementById","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.28a09e6a.chunk.js","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport { NFTStorage, File } from \"nft.storage\";\r\n\r\nconst IPFSContext = createContext({});\r\n\r\nexport function IPFSContextProvider(props) {\r\n  const [IPFSuploading, setIPFSuploading] = useState(false);\r\n  const [IPFSerror, setIPFSerror] = useState(null);\r\n\r\n  async function IPFSupload(data, file) {\r\n    try {\r\n      setIPFSerror(null);\r\n      setIPFSuploading(true);\r\n      const client = new NFTStorage({\r\n        token: process.env.REACT_APP_NFT_STORAGE_KEY\r\n      });\r\n      const metadata = await client.store({\r\n        name: data.name,\r\n        description: data.description,\r\n        image: new File([file], file.name, { type: file.type })\r\n      });\r\n      console.log(metadata);\r\n      return metadata.url;\r\n    } catch (error) {\r\n      console.error(error);\r\n      setIPFSerror(error);\r\n    } finally {\r\n      setIPFSuploading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <IPFSContext.Provider value={{ IPFSuploading, IPFSerror, IPFSupload }}>\r\n      {props.children}\r\n    </IPFSContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useIPFS() {\r\n  return useContext(IPFSContext);\r\n}\r\n","import { useState, createContext, useContext } from \"react\";\r\n\r\nconst Web3Context = createContext({});\r\n\r\nexport function Web3ContextProvider({ children }) {\r\n  const [address, setAddress] = useState(null);\r\n  const [loading, setLoading] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [eventsRegistered, setEventsRegistered] = useState(false);\r\n\r\n  async function connectAccount() {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // check if wallet has metamask\r\n      if (!window.ethereum) {\r\n        throw Error(\"You need Metamask to connect !\");\r\n      }\r\n\r\n      // request account\r\n      const accounts = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\"\r\n      });\r\n\r\n      // request chainId\r\n      const chainId = await window.ethereum.request({ method: \"eth_chainId\" });\r\n      // if (parseInt(chainId) !== (250)) {\r\n      //   throw Error(\"Please select FTM Network in your wallet\");\r\n      // }\r\n      if (parseInt(chainId) !== 4) {\r\n        throw Error(\"Please select Rinkeby Network in your wallet\");\r\n      }\r\n\r\n      // check if events are registered\r\n      if (!eventsRegistered) {\r\n        registerEvents();\r\n        setEventsRegistered(true);\r\n      }\r\n\r\n      setAddress(window.Web3.utils.toChecksumAddress(accounts[0]));\r\n      if (error) {\r\n        setError(null);\r\n      }\r\n    } catch (error) {\r\n      setAddress(null);\r\n      setError(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function registerEvents() {\r\n    // accountChange Handler\r\n    window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n      if (!accounts.length) {\r\n        setAddress(null);\r\n        setError(Error(\"Connect Your Wallet to access the site\"));\r\n      } else {\r\n        setAddress(window.Web3.utils.toChecksumAddress(accounts[0]));\r\n        setError(null);\r\n      }\r\n    });\r\n\r\n    // chainChange Handler\r\n    window.ethereum.on(\"chainChanged\", (newChainId) => {\r\n      console.log(\"Network Changed to Chain Id : \", parseInt(newChainId));\r\n      window.location.reload();\r\n    });\r\n    console.log(\"MetaMask Event Handlers Registered\");\r\n  }\r\n\r\n  return (\r\n    <Web3Context.Provider\r\n      value={{\r\n        address,\r\n        loading,\r\n        connectAccount,\r\n        error,\r\n        eventsRegistered\r\n      }}\r\n    >\r\n      {children}\r\n    </Web3Context.Provider>\r\n  );\r\n}\r\n\r\n// optional -> we can make a hook for convenience\r\nexport function useWeb3Context() {\r\n  return useContext(Web3Context);\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport style from \"./button.module.css\";\r\n\r\nexport function Button(props) {\r\n  if (props.link) {\r\n    return (\r\n      <Link\r\n        className={props.disabled ? style.buttonDisabled : style.button}\r\n        onClick={props.onClick}\r\n        disabled={props.disabled}\r\n        style={{ ...props.style }}\r\n        to={props.link}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={props.disabled ? style.buttonDisabled : style.button}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n      style={{ ...props.style }}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ImSpinner8 } from \"react-icons/im\";\r\nimport style from \"./spinner.module.css\";\r\n\r\nexport function Spinner() {\r\n  return <ImSpinner8 className={style.rotate} color=\"yellow\" />;\r\n}\r\n","import { abi } from \"../../data/nft.json\";\r\n\r\nexport async function mintNFT(tokenUri, nftContractAddress, accountAddress) {\r\n  const web3 = new window.Web3(window.ethereum);\r\n  const NFTContract = new web3.eth.Contract(abi, nftContractAddress);\r\n\r\n  await NFTContract.methods.mint(tokenUri).estimateGas({\r\n    from: accountAddress,\r\n    value: 0\r\n  });\r\n\r\n  await NFTContract.methods.mint(tokenUri).send({\r\n    from: accountAddress,\r\n    value: 0\r\n  });\r\n}\r\n","import { abi } from \"../../data/nft.json\";\r\n\r\nexport async function checkRights(nftContractAddress, accountAddress) {\r\n  const web3 = new window.Web3(window.ethereum);\r\n  const NFTContract = new web3.eth.Contract(abi, nftContractAddress);\r\n\r\n  const result = await NFTContract.methods\r\n    .hasRole('0x0000000000000000000000000000000000000000000000000000000000000000', accountAddress)\r\n    .call();\r\n  return result;\r\n}\r\n","import { abi } from \"../../data/nft.json\";\r\n\r\nexport async function getMaxSupply(nftContractAddress) {\r\n  const web3 = new window.Web3(window.ethereum);\r\n  const NFTContract = new web3.eth.Contract(abi, nftContractAddress);\r\n\r\n  const max_supply = await NFTContract.methods.max_supply().call();\r\n  return max_supply;\r\n}\r\n","import { abi } from \"../../data/nft.json\";\r\n\r\nexport async function getNextTokenId(nftContractAddress) {\r\n  const web3 = new window.Web3(window.ethereum);\r\n  const NFTContract = new web3.eth.Contract(abi, nftContractAddress);\r\n\r\n  const tokenId = await NFTContract.methods._tokenIdTracker().call();\r\n  return tokenId;\r\n}\r\n","import { getMaxSupply } from \"../web3/getMaxSupply\";\r\nimport { getNextTokenId } from \"../web3/getNextTokenId\";\r\n\r\nexport async function getNextTokenRep(nftContractAddress) {\r\n  let maxSupply, nextTokenId;\r\n\r\n  try {\r\n    maxSupply = await getMaxSupply(nftContractAddress);\r\n  } catch (error) {\r\n    console.log(\"Error fetching maxSupply\");\r\n    console.error(error);\r\n    maxSupply = \"xx\";\r\n  }\r\n  try {\r\n    nextTokenId = await getNextTokenId(nftContractAddress);\r\n  } catch (error) {\r\n    console.log(\"Error fetching nextTokenId\");\r\n    console.error(error);\r\n    nextTokenId = \"xx\";\r\n  }\r\n  return `${nextTokenId} / ${maxSupply}`;\r\n}\r\n","import { useIPFS } from \"../../../context/ipfs/IPFSContext\";\r\nimport { useWeb3Context } from \"../../../context/web3/Web3Context\";\r\nimport { Button } from \"../../shared/button/Button\";\r\nimport { Spinner } from \"../../shared/spinner/Spinner\";\r\nimport { mintNFT } from \"../../../utils/web3/mintNFT\";\r\nimport { checkRights } from \"../../../utils/web3/checkRights\";\r\nimport { getNextTokenRep } from \"../../../utils/parseUtils/getNextTokenRep\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport Dropdown from \"react-dropdown\";\r\n\r\nimport \"react-dropdown/style.css\";\r\nimport style from \"./home.module.css\";\r\n\r\nconst headbtns_wrapper_btn = {\r\n  maxWidth: \"min(100%, 400px)\",\r\n  margin: \"10px auto\"\r\n};\r\n\r\nexport function Home(props) {\r\n  const { NFTAddress, setNFTAddress, NFTAddressOptions } = props.NFTAddy;\r\n\r\n  const { address } = useWeb3Context();\r\n  const { IPFSuploading, IPFSerror, IPFSupload } = useIPFS();\r\n\r\n  const inputFileRef = useRef(null);\r\n\r\n  const [btnBusy, setBtnBusy] = useState(false);\r\n  const [nextTokenRep, setNextTokenRep] = useState(\"xx/xx\");\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  function inputFileHandler() {\r\n    if (selectedFile) {\r\n      setSelectedFile(null);\r\n    } else {\r\n      inputFileRef.current.click();\r\n    }\r\n  }\r\n\r\n  async function mintNFThandler() {\r\n    if (!name) {\r\n      return toast.error(\"NFT Name should not be empty\");\r\n    } else if (!description) {\r\n      return toast.error(\"NFT Description should not be empty\");\r\n    } else if (!selectedFile) {\r\n      return toast.error(\"Select a file to upload\");\r\n    }\r\n\r\n    const hasMintingRights = await checkRights(NFTAddress.value, address);\r\n    if (!hasMintingRights) {\r\n      return toast.error(\"You don't have the rights to mint NFT\");\r\n    }\r\n\r\n    try {\r\n      setBtnBusy(true);\r\n      const metadataUrl = await IPFSupload(\r\n        {\r\n          name: name,\r\n          description: description\r\n        },\r\n        selectedFile\r\n      );\r\n      await mintNFT(metadataUrl, NFTAddress.value, address);\r\n      toast.success(\"Mint Successfull !\");\r\n\r\n      // reset inputs\r\n      setName(\"\");\r\n      setDescription(\"\");\r\n      setSelectedFile(null);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(error.message);\r\n      toast.error(\"NFT Minting Failed\");\r\n    } finally {\r\n      setBtnBusy(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (IPFSuploading) {\r\n      toast.info(\"Uploading NFT data To IPFS\");\r\n    }\r\n  }, [IPFSuploading]);\r\n\r\n  useEffect(() => {\r\n    if (IPFSerror) {\r\n      toast.error(IPFSerror.message);\r\n    }\r\n  }, [IPFSerror]);\r\n\r\n  useEffect(() => {\r\n    getNextTokenRep(NFTAddress.value).then((_tokenRep) =>\r\n      setNextTokenRep(_tokenRep)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <img\r\n        className={style.avatarImg}\r\n        src={\r\n          NFTAddressOptions.find((addy) => addy.value === NFTAddress.value)\r\n            ?.avatar\r\n        }\r\n        alt=\"...\"\r\n      />\r\n      <div className={style.headbtns_wrapper}>\r\n        <Dropdown\r\n          className={style.dropdown}\r\n          controlClassName={style.dropdown_control}\r\n          menuClassName={style.dropdown_menu}\r\n          options={NFTAddressOptions}\r\n          onChange={(value) => setNFTAddress(value)}\r\n          value={NFTAddress}\r\n          placeholder=\"Select an Option\"\r\n        />\r\n        <Button style={headbtns_wrapper_btn} link=\"/approve\">\r\n          Start Migration\r\n        </Button>\r\n      </div>\r\n\r\n      <p>\r\n        Token : &nbsp;\r\n        <span style={{ color: \"var(--fgText)\" }}>{nextTokenRep}</span>\r\n      </p>\r\n      <p>Name :</p>\r\n      <input\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        placeholder=\"eg : TombHeads\"\r\n      />\r\n      <p>Description (optional) :</p>\r\n      <input\r\n        name=\"description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        placeholder=\"eg : Special Edition\"\r\n      />\r\n      <p>Upload File :</p>\r\n      <div className={style.uploadbox_wrapper}>\r\n        {selectedFile ? (\r\n          <>\r\n            <p>File Name : {selectedFile.name}</p>\r\n            <p>File Type : {selectedFile.type}</p>\r\n          </>\r\n        ) : (\r\n          <p>0 File(s) Uploaded</p>\r\n        )}\r\n        <Button\r\n          style={{ backgroundColor: \"var(--fgText)\" }}\r\n          onClick={inputFileHandler}\r\n        >\r\n          {selectedFile ? \"Remove File\" : \"Upload File\"}\r\n          <input\r\n            ref={inputFileRef}\r\n            style={{ display: \"none\" }}\r\n            type=\"file\"\r\n            onChange={(e) => setSelectedFile(e.target.files[0])}\r\n          />\r\n        </Button>\r\n      </div>\r\n      <Button\r\n        style={headbtns_wrapper_btn}\r\n        text=\"Mint NFT\"\r\n        onClick={mintNFThandler}\r\n      >\r\n        {btnBusy ? <Spinner /> : \"Mint\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { abi } from \"../../data/nft.json\";\r\n\r\nexport async function approveMigrator(\r\n  migratorAddress,\r\n  nftContractAddress,\r\n  accountAddress\r\n) {\r\n  const web3 = new window.Web3(window.ethereum);\r\n  const NFTContract = new web3.eth.Contract(abi, nftContractAddress);\r\n\r\n  await NFTContract.methods\r\n    .setApprovalForAll(migratorAddress, true)\r\n    .estimateGas({\r\n      from: accountAddress,\r\n      value: 0\r\n    });\r\n\r\n  await NFTContract.methods.setApprovalForAll(migratorAddress, true).send({\r\n    from: accountAddress,\r\n    value: 0\r\n  });\r\n}\r\n","import { useWeb3Context } from \"../../../context/web3/Web3Context\";\r\nimport { approveMigrator } from \"../../../utils/web3/approveMigrator\";\r\nimport { Spinner } from \"../../shared/spinner/Spinner\";\r\nimport { Button } from \"../../shared/button/Button\";\r\nimport { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport style from \"./approve.module.css\";\r\n\r\nconst wrapper_btn = {\r\n  maxWidth: \"min(100%, 400px)\",\r\n  margin: \"10px auto\"\r\n};\r\n\r\nexport function Approve(props) {\r\n  const { address } = useWeb3Context();\r\n  const [migrator, setMigrator] = useState(\"\");\r\n  const [btnBusy, setBtnBusy] = useState(false);\r\n\r\n  async function approveMigratorHandler() {\r\n    if (!window.Web3.utils.isAddress(migrator)) {\r\n      return toast.error(\"Invalid Address\");\r\n    }\r\n\r\n    try {\r\n      setBtnBusy(true);\r\n      await approveMigrator(migrator, props.NFTAddy.value, address);\r\n      toast.success(\"Contract Approved Successfully\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(error.message);\r\n      toast.error(\"Contract Approval Failed\");\r\n    } finally {\r\n      setBtnBusy(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <h2 className={style.heading}>Warning !</h2>\r\n      <p>You should be very carefull with this next step.</p>\r\n      <br />\r\n      <p>\r\n        Follow this checklist to make sure you have everything in place to start\r\n        the migration process:\r\n      </p>\r\n      <br />\r\n      <p>\r\n        1. You have minted all the NFTs you want your NFT holders to migrate to.\r\n      </p>\r\n      <br />\r\n      <p>\r\n        2. The Migrator Contract is already deployed (ask OxKalakaua about this)\r\n      </p>\r\n      <br />\r\n      <p className={style.highlight}>\r\n        What you are about to do with this action is give permission to the\r\n        Migrator contract to send your new NFTs to their corresponding owners.\r\n      </p>\r\n      <br />\r\n      <p>Migrator Contract Address :</p>\r\n      <input\r\n        name=\"migratorAddress\"\r\n        value={migrator}\r\n        onChange={(e) => setMigrator(e.target.value)}\r\n        placeholder=\"eg : 0x000000000000000000000000000000000000dEaD\"\r\n      />\r\n      <div className={style.headbtns_wrapper}>\r\n        <Button style={wrapper_btn} onClick={approveMigratorHandler}>\r\n          {btnBusy ? <Spinner /> : \"Approve\"}\r\n        </Button>\r\n        <Button style={wrapper_btn} link=\"/\">\r\n          Back\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useWeb3Context } from \"../../../context/web3/Web3Context\";\r\nimport { Spinner } from \"../spinner/Spinner\";\r\nimport style from \"./header.module.css\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport function Header() {\r\n  const { address, loading, connectAccount, error } = useWeb3Context();\r\n\r\n  function parseAddress(_address) {\r\n    return _address.slice(0, 4) + \"...\" + _address.slice(-4);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (address) {\r\n      toast.success(\"Wallet Connected\", { toastId: \"address\" });\r\n    }\r\n  }, [address]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(error.message);\r\n    }\r\n  }, [error]);\r\n\r\n  useEffect(() => connectAccount(), []);\r\n\r\n  return (\r\n    <div className={style.header}>\r\n      <p className={style.header__heading} to=\"/\">\r\n        NFT Minter\r\n      </p>\r\n      {address ? (\r\n        <p className={style.address}>{parseAddress(address)}</p>\r\n      ) : (\r\n        <a className={style.connectButton} onClick={() => connectAccount()}>\r\n          {loading ? <Spinner /> : \"Connect Wallet\"}\r\n        </a>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport style from \"./footer.module.css\";\r\n\r\nexport function Footer(props) {\r\n  return (\r\n    <div className={style.footer} style={{ ...props.style }}>\r\n      <p>\r\n        Made with <span style={{ color: \"red\" }}>❤</span> by :{\" \"}\r\n      </p>\r\n      <div className={style.avatars}>\r\n        <div className={style.avatarCard}>\r\n          <img\r\n            className={style.avatarImg}\r\n            src=\"./tombhead.png\"\r\n            alt=\"...\"\r\n            onClick={() =>\r\n              window.open(\"https://discordapp.com/users/394669527486562304\")\r\n            }\r\n          />\r\n          <p className={style.avatarCaption}>TombHeads</p>\r\n        </div>\r\n        <div className={style.avatarCard}>\r\n          <img\r\n            className={style.avatarImg}\r\n            src=\"./0xKalakaua.png\"\r\n            alt=\"...\"\r\n            onClick={() =>\r\n              window.open(\"https://discordapp.com/users/687754112866975841\")\r\n            }\r\n          />\r\n          <p className={style.avatarCaption}>0xKalakaua</p>\r\n        </div>\r\n        <div className={style.avatarCard}>\r\n          <img\r\n            className={style.avatarImg}\r\n            src=\"./mandy.png\"\r\n            alt=\"...\"\r\n            onClick={() =>\r\n              window.open(\"https://discordapp.com/users/478158762989846536\")\r\n            }\r\n          />\r\n          <p className={style.avatarCaption}>Mandy160920</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Home } from \"../components/pages/home/Home\";\nimport { Approve } from \"../components/pages/approve/Approve\";\nimport { Header } from \"../components/shared/header/Header\";\nimport { Footer } from \"../components/shared/footer/Footer\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst NFTAddressOptions = [\n  {\n    value: \"0xF6E47985bEB90bC1D24E9d1a1daAF2b316c3726E\",\n    label: \"TombHeads\",\n    avatar: \"./artists/tombhead_320.png\"\n  },\n  {\n    value: \"0xF6E47985bEB90bC1D24E9d1a1daAF2b316c3726E\",\n    label: \"TombHeads01\",\n    avatar: \"./artists/samurai_320.png\"\n  },\n  {\n    value: \"0xF6E47985bEB90bC1D24E9d1a1daAF2b316c3726E\",\n    label: \"TombHeads02\",\n    avatar: \"./artists/tombhead_320.png\"\n  },\n  {\n    value: \"0xF6E47985bEB90bC1D24E9d1a1daAF2b316c3725E\",\n    label: \"DefiDino\",\n    avatar: \"./artists/defidino_320.gif\"\n  }\n];\n\nexport default function App() {\n  const [NFTAddress, setNFTAddress] = useState(NFTAddressOptions[0]);\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path={[\"/\", \"/home\"]}>\n          <Home NFTAddy={{ NFTAddress, setNFTAddress, NFTAddressOptions }} />\n        </Route>\n        <Route exact path={\"/approve\"}>\n          <Approve NFTAddy={NFTAddress} />\n        </Route>\n      </Switch>\n      <Footer style={{ visibility: \"hiddn\" }} />\n      <ToastContainer\n        style={{ overflowWrap: \"anywhere\" }}\n        position=\"bottom-right\"\n      />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"../src/components/App\";\nimport { Web3ContextProvider } from \"./context/web3/Web3Context\";\nimport { IPFSContextProvider } from \"./context/ipfs/IPFSContext\";\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <BrowserRouter>\n      <Web3ContextProvider>\n        <IPFSContextProvider>\n          <App />\n        </IPFSContextProvider>\n      </Web3ContextProvider>\n    </BrowserRouter>\n  </StrictMode>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__zUd-V\",\"avatars\":\"footer_avatars__Dy6h-\",\"avatarCard\":\"footer_avatarCard__14tNK\",\"avatarImg\":\"footer_avatarImg__eyyuS\",\"avatarCaption\":\"footer_avatarCaption__1ARsF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"home_wrapper__2RDK_\",\"avatarImg\":\"home_avatarImg__luTeV\",\"dropdown\":\"home_dropdown__1IYYY\",\"dropdown_control\":\"home_dropdown_control__3q42O\",\"dropdown_menu\":\"home_dropdown_menu__1vI1J\",\"headbtns_wrapper\":\"home_headbtns_wrapper__1LNJQ\",\"uploadbox_wrapper\":\"home_uploadbox_wrapper__2zATs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3p82B\",\"buttonDisabled\":\"button_buttonDisabled__31X5y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"approve_wrapper__2DoSB\",\"headbtns_wrapper\":\"approve_headbtns_wrapper__3Cw6g\",\"heading\":\"approve_heading__3yL7n\",\"highlight\":\"approve_highlight__3IqEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__uGPZM\",\"header__heading\":\"header_header__heading__3kuyG\",\"connectButton\":\"header_connectButton__3hOB6\",\"address\":\"header_address__3VRXm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotate\":\"spinner_rotate__1VWut\",\"rotation\":\"spinner_rotation__1zuK-\"};"],"sourceRoot":""}